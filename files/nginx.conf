http {
    resolver 127.0.0.11 ipv6=off;
    upstream st2web {
        server st2web:80;
    }
    upstream oauth2_proxy {
        server oauth2_proxy:4180;
    }
    upstream st2auth {
        server st2auth:9100;
    }

    server {
        listen 80;
        server_name st2-proxy;

        # Auth request configuration
        location /oauth2 {
            internal;
            proxy_pass http://oauth2_proxy;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
        }

        # Main location block
        location / {
            # First authenticate the user
            auth_request /oauth2/auth;
            error_page 401 = /oauth2/sign_in;
            auth_request_set $user $upstream_http_x_auth_request_user;
            auth_request_set $email $upstream_http_x_auth_request_email;

            # If auth_request returns 403, show forbidden page
            error_page 403 /403.html;

            # Check if the st2_auth_token cookie exists
            if ($cookie_st2_auth_token = "") {
                # If the cookie doesn't exist, get a new token
                proxy_pass http://st2auth/v1/tokens;
                proxy_method POST;
                proxy_set_header Content-Length "";
                proxy_set_header X-Forwarded-User $email;
                proxy_set_header X-Forwarded-For $remote_addr;
                proxy_intercept_errors on;
                error_page 201 = @set_token;
            }

            # If the cookie exists, proxy to st2web
            proxy_pass http://st2web;
            proxy_set_header X-User $user;
            proxy_set_header X-Email $email;
            proxy_set_header X-Auth-Token $cookie_st2_auth_token;
        }

        # Handle setting the token

        # This needs to be done because st2web doesn't interface with st2auth proxy natively and still
        # shows the basic login screen. 

        # Here we redirect to a static webpage that stores the token generated by st2auth in 
        # local storage which then st2web will pick up and grant access 
        
        location @set_token {
            add_header Set-Cookie "st2_auth_token=$upstream_http_x_auth_token; Path=/; HttpOnly";
            add_header Content-Type text/html;
            return 200 '
                <html>
                <head>
                    <script>
                        // Store token in localStorage
                        localStorage.setItem("st2_auth_token", "$upstream_http_x_auth_token");
                        // Redirect back to the original page
                        window.location.href = "/";
                    </script>
                </head>
                <body>Setting auth token...</body>
                </html>
            ';
        }

        error_page 403 /403.html;
        location = /403.html {
            internal;
            return 403 '<html><body><h1>403 Forbidden</h1></body></html>';
        }
    }
}